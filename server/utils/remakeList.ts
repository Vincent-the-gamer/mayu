export const regions = [
  null,
  '法国',
  '中国',
  '德国',
  '加拿大',
  '日本',
  '英国',
  '美国',
  '韩国',
  '朝鲜',
  '印度',
  '西班牙',
  '巴西',
  '冰岛',
  '挪威',
  '丹麦',
  '瑞典',
  '芬兰',
  '交界地',
  '幻想乡',
  '寂静岭',
  '浣熊市',
]

export const locations = ['大学', '县城', '首都', '农村', '市区']

export const identities = [
  '女孩子',
  '鼠鼠',
  '鲨鲨',
  '猫猫',
  '男孩子',
  '狗狗',
  '鸽子',
  '兔兔',
  'xyn',
  '小南梁',
]

// 特殊地点
export const specialLocations: Record<string, string[]> = {
  中国: ['天庭', '黄风岭', '花果山', '高老庄', '盘丝洞', '火焰山'],
  美国: ['圣地亚哥'],
  日本: ['穗织村', '鹫逗市', '京都市', '学园都市', '新日暮里'],
  交界地: ['宁姆格福', '史东薇尔城', '盖利德', '黄金树', '王城罗德尔', '摩恩城', '湖之利耶尼亚', '亚坛高原'],
  幻想乡: ['博丽神社', '妖怪之山', '雾之湖', '红魔馆'],
  寂静岭: ['医院', '医院(里世界)', '监狱', '监狱(里世界)', '家中', '家中(里世界)', '小镇上', '小镇上(里世界)'],
  浣熊市: ['阿克雷山脉', '浣熊市警察局', '肯多枪械店', '下水道', '母巢'],
}

// 特殊身份，通过地点判断，如果匹配不上返回基本的
export function getSpecialIdentities(location: string) {
  // 交界地
  if (specialLocations['交界地'].includes(location)) {
    return [
      '褪色者',
      '「月之公主」菈妮',
      '「碎星」拉塔恩',
      '「约定之王」拉塔恩',
      '「恶兆妖鬼」玛尔基特',
      '「死眠少女」菲雅',
      '帕奇',
      '「女神」玛莉卡',
      '「接肢」葛瑞克',
      '「腐败女神」玛莲妮亚',
      '「鲜血君王」蒙格',
    ]
  }
  else if (specialLocations['寂静岭'].includes(location)) {
    return [
      '护士妹妹',
      '三角头',
      '阿蕾莎',
      '身寸男',
      '隐形怪',
      '双肛',
      '哈利·梅森(1代男主)',
      '詹姆斯·桑德兰(2代男主)',
      '希瑟·梅森(3代女主)',
      '亨利·汤森德(4代男主)',
      '沃特·苏利文(4代反派)',
      '阿历克斯·谢泼德(归乡男主)',
      '墨菲·潘德尔顿(暴雨男主)',
    ]
  }
  else if (specialLocations['浣熊市'].includes(location)) {
    return [
      '里昂·肯尼迪',
      '克里斯·雷德菲尔德',
      '克莱尔·雷德菲尔德',
      '艾达·王',
      '威廉·珀金',
      '亚妮·珀金',
      '雪莉·珀金',
      '马文·布拉纳',
      '吉尔·瓦伦丁',
      '卡洛斯·奥利维拉',
      '尼古拉·吉诺瓦耶夫',
      '阿尔伯特·威斯克',
      '小丧尸',
      '暴君',
      '猎杀者',
      '追踪者(Nemesis)',
    ]
  }
  else {
    switch (location) {
      // 中国
      case '天庭':
        return ['杨戬', '太上老君', '四大天王之一', '观音菩萨', '弥勒佛', '金蝉子']
      case '黄风岭':
        return ['黄风大圣', '灵吉菩萨', '戌狗', '虎先锋']
      case '花果山':
        return ['孙悟空', '天命人', '小猴子']
      case '高老庄':
        return ['猪八戒']
      case '盘丝洞':
        return ['紫蛛儿', '蜘蛛精大姐', '蜘蛛精大姐', '蜘蛛精二姐', '蜘蛛精三姐', '蜘蛛精四妹', '蜘蛛精五妹', '蜘蛛精六妹']
      case '火焰山':
        return ['牛魔王', '铁扇公主', '红孩儿']
        // 美国
      case '圣地亚哥':
        return ['金坷垃非洲哥', '金坷垃日本哥', '金坷垃欧洲哥']
        // 日本
      case '穗织村':
        return [
          '朝武芳乃',
          '常陆茉子',
          '有地将臣',
          '丛雨',
          '蕾娜·列支敦瑙尔',
          '鞍马小春',
          '马庭芦花',
          '鞍马廉太郎',
          '鞍马玄十郎',
        ]
      case '鹫逗市':
        return [
          '三司绫濑',
          '在原七海',
          '二条院羽月',
          '式部茉优',
          '壬生千咲',
          '在原晓',
          '周防恭平',
        ]
      case '京都市':
        return [
          '保科柊史',
          '绫地宁宁',
          '因幡巡',
          '户隐憧子',
          '椎叶䌷',
          '假屋和奏',
        ]
      case '学园都市':
        return [
          '上条当麻',
          '茵蒂克丝',
          '御坂美琴',
          '白井黑子',
          '佐天泪子',
          '食蜂操祈',
          '婚后光子',
          '初春饰利',
          '一方通行',
        ]
      case '新日暮里':
        return [
          '木吉',
          '比利·海灵顿(比利王)',
          '范·达克霍姆(Van♂样)',
        ]
        // 幻想乡
      case '博丽神社':
        return [
          '博丽灵梦',
          '玄爷',
          '桑尼米尔克',
          '露娜切露德',
          '斯塔萨菲雅',
          '克劳恩皮丝',
          '高丽野阿吽',
        ]
      case '妖怪之山':
        return [
          '橙',
          '秋静叶',
          '秋穰子',
          '键山雏',
          '东风谷早苗',
          '八坂神奈子',
          '洩矢诹访子',
          '豪德寺三花',
          '犬走椛',
          '射命丸文',
          '姬海棠果',
          '饭纲丸龙',
          '伊吹萃香',
          '星熊勇仪',
        ]
      case '雾之湖':
        return ['若鹭姬', '琪露诺']
      case '红魔馆':
        return [
          '蕾米莉亚·斯卡蕾特',
          '芙兰朵露·斯卡蕾特',
          '十六夜咲夜',
          '帕秋莉·诺蕾姬',
          '红美铃',
        ]
      default:
        return identities
    }
  }
}
